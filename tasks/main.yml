---
- name: OS vars
  include_vars: '{{ ansible_os_family }}.yml'
  tags: tomcat, vars

- name: do_sys or not
  set_fact:
    do_sys: '{% if "criecm" in ansible_local and "tomcat" in ansible_local.criecm and ansible_local.criecm.tomcat.version | default(0) | int >= tomcat_role_version and not do_sysadm | default(False) %}no{% else %}yes{% endif %}'

- name: OS tasks
  include_tasks: '{{ ansible_os_family }}.yml'
  tags: tomcat, pkg

# memcached if needed
- name: enable memcached
  service:
    name: memcached
    state: started
    enabled: yes
  when: memcached_nodes is search(ansible_hostname) or memcached_nodes is search("localhost")

# keystore
- name: copy keystore
  copy:
    src: '{{ tomcat_keystore }}'
    dest: '/etc/ssl/{{ tomcat_keystore | regex_replace(".*/","") }}'
  when: tomcat_keystore != ''
  notify: restart tomcat
  tags: tomcat, ssl

# configs
- name: get memcache jars
  get_url:
    url: '{{ item }}'
    dest: '{{ tomcat_lib_dir }}/{{ item | regex_replace(".*/","") }}'
  with_items:
    - 'http://repo1.maven.org/maven2/de/javakaffee/msm/memcached-session-manager/{{ memcached_session_manager_version }}/memcached-session-manager-{{ memcached_session_manager_version }}.jar'
    - 'http://repo1.maven.org/maven2/de/javakaffee/msm/memcached-session-manager-tc8/{{ memcached_session_manager_version }}/memcached-session-manager-tc8-{{ memcached_session_manager_version }}.jar'
    - 'http://repo1.maven.org/maven2/net/spy/spymemcached/{{ spymemcached_version }}/spymemcached-{{ spymemcached_version }}.jar'
  when: do_sys and memcached_nodes != ""
  tags: tomcat, config

- name: config context.xml / Manager element
  template:
    src: context.xml.j2
    dest: '{{ tomcat_config_dir }}/context.xml'
    owner: root
    group: '{{ tomcat_group }}'
    mode: '0640'
  notify: restart tomcat
  tags: tomcat, config
  when: do_sys

- name: config server.xml
  template:
    src: server.xml.j2
    dest: '{{ tomcat_config_dir }}/server.xml'
    owner: root
    group: '{{ tomcat_group }}'
    mode: '0640'
  notify: restart tomcat
  tags: tomcat, config
  when: do_sys

- name: config catalina.properties
  lineinfile:
    dest: '{{ tomcat_config_dir }}/catalina.properties'
    line: '{{ line }}'
    regexp: '^{{ line | regex_replace("=.*$","") }}'
  with_items: '{{ tomcat_catalina_props }}'
  loop_control:
    loop_var: line
  tags: tomcat, config
  when: do_sys

- name: logging.properties
  template:
    src: logging.properties.j2
    dest: '{{ tomcat_config_dir }}/logging.properties'
    owner: root
    group: '{{ tomcat_group }}'
    mode: '0640'
  notify: restart tomcat
  tags: tomcat, config
  when: do_sys

- name: deploy tomcat_webapps
  include_tasks: webapp.yml
  with_items: '{{ tomcat_webapps }}'
  loop_control:
    loop_var: onewebapp
  tags: tomcat, webapps
  when: myapp == '' or myapp == onewebapp.key
  register: myapps

- name: ensure tomcat runs
  service:
    name: '{{ tomcat_service }}'
    state: started
  when: myapps.changed
  tags:
    - skip_ansible_lint

- name: fact done
  blockinfile:
    path: '{{ etcprefix }}/etc/ansible/facts.d/criecm.fact'
    marker: '# {mark} ANSIBLE criecm.tomcat BLOCK'
    block: |
      [tomcat]
      version={{ tomcat_role_version }}
    create: yes
  when: do_sys

